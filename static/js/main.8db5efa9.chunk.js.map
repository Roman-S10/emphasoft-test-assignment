{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","services/emphasoft-api-service.js","components/login-form/login-form.js","components/login-form/index.js","components/user-list-item/index.js","components/user-list-item/user-list-item.js","components/loader/index.js","components/loader/loader.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/error-message/index.js","components/error-message/error-message.js","components/user-list/index.js","components/user-list/user-list.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","withRouter","props","logOutButton","isLoggedIn","type","className","onClick","logOut","history","push","EmphasoftApiService","_apiURL","logIn","username","password","axios","post","then","response","setToken","data","token","catch","error","console","log","localStorage","setItem","getToken","getItem","removeItem","getUsers","a","get","headers","Authorization","LoginForm","state","usernameError","passwordError","onInputChange","e","setState","target","name","value","onFormSubmit","preventDefault","isValide","this","onSubmit","onChange","autoFocus","placeholder","Component","UserListItem","user","id","first_name","last_name","lastName","length","substring","Loader","SearchPanel","term","onSearch","ErrorMessages","message","UserList","users","loading","sortType","searchTerm","onUsersLoading","onError","renderUserList","map","key","sortingById","newUsers","newSortType","sort","b","toLowerCase","filter","includes","to","errorMessage","loader","usersListSearch","userSearch","content","scope","ErrorBoundary","hasError","children","App","emphasoftApiService","path","render","exact","from","ReactDOM","document","getElementById"],"mappings":"uYACeA,G,MCsBAC,aAnBG,SAACC,GAEf,IAKMC,EAAeD,EAAME,aACzB,4BAAQC,KAAK,SAASC,UAAU,gBAAgBC,QANjC,WAEb,OADAL,EAAMM,SACCN,EAAMO,QAAQC,KAAK,YAI5B,UACA,KAEF,OACI,4BAAQJ,UAAU,cACd,0BAAMA,UAAU,QAAhB,6BACCH,O,uFC0BEQ,E,iDAzCXC,QAAU,mD,KAEVC,MAAQ,SAACC,EAAUC,GACf,OAAOC,IAAMC,KAAN,UAAc,EAAKL,QAAnB,mBAA6C,CAChDE,WACAC,aAEHG,MAAK,SAACC,GACH,EAAKC,SAASD,EAASE,KAAKC,UAE/BC,OAAM,SAACC,GACJC,QAAQC,IAAIF,O,KAIpBJ,SAAW,SAACE,GACRK,aAAaC,QAAQ,uBAAwBN,I,KAGjDO,SAAW,WACP,OAAOF,aAAaG,QAAQ,yB,KAGhCtB,OAAS,WACLmB,aAAaI,WAAW,yB,KAG5B3B,WAAa,WACT,OAAO,EAAKyB,Y,KAGhBG,S,sBAAW,4BAAAC,EAAA,sEACgBjB,IAAMkB,IAAN,UAAa,EAAKtB,QAAlB,iBAAyC,CAC5DuB,QAAS,CACLC,cAAc,SAAD,OAAW,EAAKP,eAH9B,cACDV,EADC,yBAMAA,EAASE,MANT,4CC5BTgB,E,4MAEFC,MAAQ,CACJxB,SAAU,GACVC,SAAU,GACVwB,cAAe,GACfC,cAAe,I,EAGnB7B,oBAAsB,IAAIA,E,EAE1B8B,cAAgB,SAACC,GAAO,IAAD,EACnB,EAAKC,UAAL,mBACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAD9B,8BAEmB,IAFnB,8BAGmB,IAHnB,K,EAOJC,aAAe,SAACL,GACZA,EAAEM,iBACC,EAAKC,YACJ,EAAKtC,oBAAoBE,MAAM,EAAKyB,MAAMxB,SAAU,EAAKwB,MAAMvB,UAC9DG,MAAK,kBAAK,EAAKhB,MAAMO,QAAQC,KAAK,c,EAI3CuC,SAAW,WAEP,OAAI,EAAKX,MAAMxB,WAOX,EAAKwB,MAAMvB,WACX,EAAK4B,SAAS,CACVH,cAAe,mDAEZ,IAVP,EAAKG,SAAS,CACVJ,cAAe,mDAEZ,I,uDAaN,IAAD,EAEuDW,KAAKZ,MAAzDxB,EAFH,EAEGA,SAAUC,EAFb,EAEaA,SAAUwB,EAFvB,EAEuBA,cAAeC,EAFtC,EAEsCA,cAE1C,OACI,0BAAMW,SAAWD,KAAKH,aAAezC,UAAW,cAC5C,6CACA,2BACIuC,KAAK,WACLxC,KAAK,OACL+C,SAAWF,KAAKT,cAChBK,MAAQhC,EACRuC,WAAS,EACTC,YAAY,aACdf,EAAgB,yBAAKjC,UAAU,iBAAf,IAAiCiC,EAAjC,KAAyD,KAC3E,2BACIM,KAAK,WACLxC,KAAK,WACL+C,SAAWF,KAAKT,cAChBK,MAAQ/B,EACRuC,YAAY,aACdd,EAAgB,yBAAKlC,UAAU,iBAAf,IAAiCkC,EAAjC,KAAyD,KAC3E,+C,GApEQe,aCLTlB,ED+EApC,YAAWoC,G,QE/EXmB,ECCM,SAACtD,GAAW,IAAD,EACkBA,EAAMuD,KAA7CC,EADqB,EACrBA,GAAIC,EADiB,EACjBA,WAAYC,EADK,EACLA,UAAW9C,EADN,EACMA,SAE5B+C,EAAWD,EAAUE,OAAS,GAAKF,EAAUG,UAAU,EAAG,IAAM,MAAQH,EAC9E,OACI,4BACI,4BAAKF,GACL,4BAAKC,GACL,4BAAKE,GACL,4BAAK/C,KCVFkD,G,MCGA,WACX,OACI,yBAAK1D,UAAU,eACX,yBAAKA,UAAU,cACX,8BACA,kCCRD2D,G,wNCKX3B,MAAQ,CACJ4B,KAAO,I,EAGXzB,cAAgB,SAACC,GACb,IAAMwB,EAAOxB,EAAEE,OAAOE,MACtB,EAAKH,SAAS,CAACuB,SACf,EAAKhE,MAAMiE,SAASD,I,uDAIpB,OACI,2BAAO7D,KAAK,OAAOwC,KAAK,eACxBS,YAAY,qBACZR,MAAOI,KAAKZ,MAAM4B,KAClBd,SAAUF,KAAKT,oB,GAjBDc,cCHXa,G,MCEM,SAAClE,GAClB,OACI,yBAAKI,UAAU,iBACVJ,EAAMmE,WCLJC,E,4MCUXhC,MAAQ,CACJiC,MAAO,GACPC,SAAS,EACThD,MAAO,KACPiD,SAAU,2BACVC,WAAY,I,EAWhBC,eAAiB,SAACJ,GACd,EAAK5B,SAAS,CAAC4B,QAAOC,SAAS,K,EAGnCI,QAAU,SAACpD,GACP,EAAKmB,SAAS,CAACnB,QAAOgD,SAAS,K,EAGnCK,eAAiB,SAACN,GAAD,OAAWA,EAAMO,KAAI,SAAArB,GAClC,OAAO,kBAAC,EAAD,CAAcA,KAAQA,EAAMsB,IAAKtB,EAAKC,S,EAGjDsB,YAAc,WACV,EAAKrC,UAAS,YAAuB,IAArB4B,EAAoB,EAApBA,MAAOE,EAAa,EAAbA,SACbQ,EAAQ,YAAOV,GACfW,EAA2B,QAAbT,EAAqB,OAAS,MAMlD,OAJAQ,EAASE,MAAK,SAAClD,EAAGmD,GACd,MAAoB,QAAbX,EAAqBW,EAAE1B,GAAKzB,EAAEyB,GAAKzB,EAAEyB,GAAK0B,EAAE1B,MAGhD,CACHa,MAAOU,EACPR,SAAUS,O,EAStBf,SAAW,SAACD,GACR,EAAKvB,SAAS,CAAC+B,WAAYR,EAAKmB,iB,kEAzChB,IAAD,OACZnC,KAAKhD,MAAME,cACV8C,KAAKhD,MAAM8B,WACVd,KAAKgC,KAAKyB,gBACVpD,OAAM,kBAAM,EAAKqD,QAAQ,wD,iCAgCvBL,EAAOL,GACd,OAAOK,EAAMe,QAAO,SAAA7B,GAAI,OAAIA,EAAK3C,SAASuE,cAAcE,SAASrB,EAAKmB,oB,+BAQtE,IAAInC,KAAKhD,MAAME,aAAc,OAAO,kBAAC,IAAD,CAAUoF,GAAG,WAD7C,MAGkDtC,KAAKZ,MAApDkC,EAHH,EAGGA,QAASD,EAHZ,EAGYA,MAAOG,EAHnB,EAGmBA,WAAYD,EAH/B,EAG+BA,SAAUjD,EAHzC,EAGyCA,MACvCiE,EAAejE,EAAQ,kBAAC,EAAD,CAAc6C,QAAW7C,IAAW,KAC3DkE,EAASlB,EAAU,kBAAC,EAAD,MAAY,KAC/BmB,EAAkBzC,KAAK0C,WAAWrB,EAAOG,GAEzCmB,EAAWrB,GAAYhD,EAmB5B,KAlBC,6BACE,kBAAC,EAAD,CAAa2C,SAAUjB,KAAKiB,WAC5B,2BAAO7D,UAAU,oBACb,+BACI,4BACI,wBAAIwF,MAAM,MACVxF,UAAU,aACVC,QAAS2C,KAAK8B,aAFd,KAE+BP,GAC/B,wBAAIqB,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,cAGR,+BACK5C,KAAK2B,eAAec,MAMjC,OACI,oCACCF,EACCC,EACDG,O,GAvFUtC,aCRRwC,E,4MCKXzD,MAAQ,CACJ0D,UAAU,G,kEAIV9C,KAAKP,SAAS,CAACqD,UAAU,M,+BAIzB,OAAG9C,KAAKZ,MAAM0D,SAAiB,kBAAC,EAAD,CAAc3B,QAAS,oDAE/CnB,KAAKhD,MAAM+F,a,GAbE1C,aC4Bb2C,IC/BAA,EDQf,WACE,IAAMC,EAAsB,IAAIxF,EAChC,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKL,UAAU,OACb,kBAAC,IAAD,CAAO8F,KAAK,IAAIC,OAAS,kBAAM,kBAAC,EAAD,CAAW7F,OAAQ2F,EAAoB3F,OAAQJ,WAAY+F,EAAoB/F,gBAC9G,kBAAC,IAAD,CAAOgG,KAAK,SAASC,OAAS,kBAAM,kBAAC,EAAD,OAAeC,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAS,WAC5B,OAAO,kBAAC,EAAD,CACLrE,SAAUmE,EAAoBnE,SAC9B5B,WAAY+F,EAAoB/F,iBAMtC,kBAAC,IAAD,CAAUmG,KAAK,IAAIf,GAAKW,EAAoB/F,aAAe,SAAW,cErB9EoG,IAASH,OAAO,kBAAC,EAAD,MAASI,SAASC,eAAe,W","file":"static/js/main.8db5efa9.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AppHeader = (props) => {\r\n\r\n    const onLogOut = () => {\r\n        props.logOut();\r\n        return props.history.push('/login');\r\n    }\r\n\r\n    const logOutButton = props.isLoggedIn()\r\n    ? <button type=\"button\" className=\"logout-button\" onClick={onLogOut}>Logout</button>\r\n    : null;\r\n\r\n    return(\r\n        <header className=\"app-header\">\r\n            <span className=\"logo\">Emphasoft Test Assignment</span>\r\n            {logOutButton}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default withRouter(AppHeader);","import axios from 'axios';\r\n\r\nclass EmphasoftApiService {\r\n    _apiURL = 'https://emphasoft-test-assignment.herokuapp.com/';\r\n\r\n    logIn = (username, password) => {\r\n        return axios.post(`${this._apiURL}api-token-auth/`, {\r\n            username,\r\n            password\r\n        })\r\n        .then((response) => {\r\n            this.setToken(response.data.token);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    setToken = (token) =>  {\r\n        localStorage.setItem('emphasoft-auth-token', token);\r\n    }\r\n\r\n    getToken = () =>  {\r\n        return localStorage.getItem('emphasoft-auth-token');\r\n    }\r\n\r\n    logOut = () => {\r\n        localStorage.removeItem('emphasoft-auth-token');\r\n    }\r\n\r\n    isLoggedIn = () => {\r\n        return this.getToken();\r\n    }\r\n\r\n    getUsers = async () => {\r\n        const response = await axios.get(`${this._apiURL}api/v1/users/`,{\r\n            headers: {\r\n                Authorization: `Token ${this.getToken()}`\r\n            }\r\n        });\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default EmphasoftApiService;","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './login-form.css';\r\nimport EmphasoftApiService from '../../services/emphasoft-api-service';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        usernameError: '',\r\n        passwordError: ''\r\n    };\r\n\r\n    EmphasoftApiService = new EmphasoftApiService();\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            usernameError: '',\r\n            passwordError: ''\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.isValide()){\r\n            this.EmphasoftApiService.logIn(this.state.username, this.state.password)\r\n            .then(()=> this.props.history.push('/users'));\r\n        }\r\n    }\r\n\r\n    isValide = () => {\r\n\r\n        if(!this.state.username){\r\n            this.setState({\r\n                usernameError: 'Username must contain at least one character!'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(!this.state.password){\r\n            this.setState({\r\n                passwordError: 'Password must contain at least one character!'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render(){\r\n\r\n        const {username, password, usernameError, passwordError} = this.state;\r\n\r\n        return (\r\n            <form onSubmit={ this.onFormSubmit } className =\"login-form\" >\r\n                <h1>Please log in</h1>\r\n                <input \r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    onChange={ this.onInputChange }\r\n                    value={ username }\r\n                    autoFocus\r\n                    placeholder=\"Username\"/>\r\n                { usernameError ? <div className=\"error-message\"> {usernameError} </div> : null}\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={ this.onInputChange }\r\n                    value={ password }\r\n                    placeholder=\"Password\"/>\r\n                { passwordError ? <div className=\"error-message\"> {passwordError} </div> : null}\r\n                <button>Log in</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);","import LoginForm from './login-form';\r\nexport default LoginForm;","import UserListItem from './user-list-item';\r\nexport default UserListItem;","import React from 'react';\r\n\r\nconst UserListItem = (props) => {\r\n    const {id, first_name, last_name, username} = props.user;\r\n    \r\n    const lastName = last_name.length > 45 ? last_name.substring(0, 25) + \"...\" : last_name;\r\n    return(\r\n        <tr>\r\n            <th>{id}</th>\r\n            <td>{first_name}</td>\r\n            <td>{lastName}</td> \r\n            <td>{username}</td> \r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default UserListItem;","import Loader from './loader';\r\nexport default Loader;","import React from 'react';\r\n\r\nimport './loader.css';\r\n\r\nconst Loader = () =>{\r\n    return (\r\n        <div className=\"lds-wrapper\">\r\n            <div className=\"lds-ripple\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        term : ''\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearch(term);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input type=\"text\" name=\"search-panel\" \r\n            placeholder=\"Search by username\" \r\n            value={this.state.term}\r\n            onChange={this.onInputChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import ErrorMessages from './error-message';\r\nexport default ErrorMessages;","import React from 'react';\r\nimport './error-message.css';\r\n\r\nconst ErrorMessage = (props) => {\r\n    return (\r\n        <div className=\"error-message\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import UserList from './user-list';\r\nexport default UserList;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport UserListItem from '../user-list-item';\r\nimport Loader from '../loader';\r\nimport './user-list.css';\r\nimport SearchPanel from '../search-panel';\r\nimport ErrorMessage from '../error-message';\r\n\r\nclass UserList extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        loading: true,\r\n        error: null,\r\n        sortType: '🠕🠗',\r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.isLoggedIn()){\r\n            this.props.getUsers()\r\n            .then(this.onUsersLoading)\r\n            .catch(() => this.onError('Something went wrong, please try again later :)'));\r\n        }\r\n    }\r\n\r\n    onUsersLoading = (users) => {\r\n        this.setState({users, loading: false});\r\n    }\r\n\r\n    onError = (error) => {\r\n        this.setState({error, loading: false});\r\n    }\r\n\r\n    renderUserList = (users) => users.map(user => {\r\n        return <UserListItem user = {user} key={user.id} />\r\n    });\r\n\r\n    sortingById = () => {\r\n        this.setState(({users, sortType}) =>{\r\n            const newUsers = [...users];\r\n            const newSortType = sortType === 'ASC' ? 'DESC' : 'ASC';\r\n            \r\n            newUsers.sort((a, b) => {\r\n                return sortType === 'ASC' ? b.id - a.id : a.id - b.id;\r\n            });\r\n\r\n            return {\r\n                users: newUsers,\r\n                sortType: newSortType\r\n            }\r\n        })\r\n    }\r\n\r\n    userSearch(users, term){\r\n        return users.filter(user => user.username.toLowerCase().includes(term.toLowerCase()));\r\n    }\r\n    \r\n    onSearch = (term) => {\r\n        this.setState({searchTerm: term.toLowerCase()});\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.isLoggedIn()) return <Redirect to=\"/login\" />;\r\n\r\n        const {loading, users, searchTerm, sortType, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage message = {error}/> : null;\r\n        const loader = loading ? <Loader/> : null;\r\n        const usersListSearch = this.userSearch(users, searchTerm);\r\n        \r\n        const content = !loading && !error\r\n        ? <div>\r\n            <SearchPanel onSearch={this.onSearch} /> \r\n            <table className=\"responsive-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" \r\n                        className=\"th-pointer\"\r\n                        onClick={this.sortingById} ># {sortType}</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">Username</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderUserList(usersListSearch)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        :null;\r\n\r\n        return(\r\n            <>\r\n            {errorMessage}\r\n             {loader}\r\n            {content}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;","import ErrorBoundary from './error-boundary';\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\n\r\nimport ErrorMessage from '../error-message';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n    \r\n    componentDidCatch(){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError) return <ErrorMessage message={'Something went wrong, please try again later :)'} />;\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport AppHeader from '../app-header';\nimport LoginForm from '../login-form';\nimport UserList from '../user-list';\nimport ErrorBoundary from '../error-boundary';\nimport EmphasoftApiService from '../../services/emphasoft-api-service';\n\nfunction App() {\n  const emphasoftApiService = new EmphasoftApiService();\n  return (\n    <ErrorBoundary>\n      <Router>\n        <div className=\"app\">\n          <Route path=\"/\" render={ () => <AppHeader logOut={emphasoftApiService.logOut} isLoggedIn={emphasoftApiService.isLoggedIn} /> } />\n          <Route path=\"/login\" render={ () => <LoginForm/> } exact />\n          <Route path=\"/users\" render={ () => {\n            return <UserList \n              getUsers={emphasoftApiService.getUsers}\n              isLoggedIn={emphasoftApiService.isLoggedIn}\n              />\n            }\n          } />\n        </div>\n        \n        <Redirect from='/' to= {emphasoftApiService.isLoggedIn() ? '/users' : '/login'} />\n      </Router>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;","import App from './app';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}